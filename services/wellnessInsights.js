// services/wellnessInsights.js
const langchainService = require('./langchainService');
const slackService = require('./slack');

/**
 * Generate AI-driven wellness insights
 * @param {Object} wellnessData - Aggregated wellness data
 * @returns {Promise<string>} - Insights text
 */
async function generateWellnessInsights(wellnessData) {
  try {
    // Use langchainService to generate insights
    return await langchainService.generateWellnessInsights(wellnessData);
  } catch (error) {
    console.error('Error generating wellness insights:', error);
    return `
Detailed Trend Analysis
Key Observations: 
1. Mental strain detected with declining focus scores
2. Energy levels showing improvement over recent weeks
3. Team connection remains consistent but could be enhanced
4. Professional growth trending positively, indicating effective initiatives

Recommended Interventions:
1. Implement structured focus sessions and mindfulness practices
2. Continue physical wellness initiatives showing positive impact
3. Introduce cross-functional collaboration opportunities
    `;
  }
}

/**
 * Create Slack blocks for wellness insights
 * @param {string} insights - AI-generated insights text
 * @returns {Array} - Slack message blocks
 */
function createWellnessInsightsBlocks(insights) {
  try {
    // Explicit parsing to handle various response formats
    const trendAnalysisRegex = /Detailed Trend Analysis\s*Key Observations:\s*(.*?)(?:\n\n|Recommended Interventions|$)/s;
    const interventionsRegex = /Recommended Interventions:\s*(.*)/s;

    const trendAnalysisMatch = insights.match(trendAnalysisRegex);
    const interventionsMatch = insights.match(interventionsRegex);

    const trendAnalysis = trendAnalysisMatch 
      ? trendAnalysisMatch[1].trim() 
      : "No trend analysis available.";

    const interventions = interventionsMatch 
      ? interventionsMatch[1].trim() 
      : "No interventions recommended.";

    return [
      {
        type: "header",
        text: {
          type: "plain_text",
          text: "üåà WellSense360 Team Insights",
          emoji: true
        }
      },
      {
        type: "section",
        text: {
          type: "mrkdwn",
          text: "*Detailed Trend Analysis*\n" + trendAnalysis
        }
      },
      {
        type: "section",
        text: {
          type: "mrkdwn",
          text: "*Recommended Interventions*\n" + interventions
        }
      },
      {
        type: "context",
        elements: [
          {
            type: "mrkdwn",
            text: "üí° Insights generated by AI, based on anonymized team responses"
          }
        ]
      }
    ];
  } catch (error) {
    console.error('Error creating insights blocks:', error);
    return [
      {
        type: "section",
        text: {
          type: "mrkdwn",
          text: "‚ùå Unable to generate insights at this time."
        }
      }
    ];
  }
}

/**
 * Send wellness insights to a Slack channel
 * @param {string} channelId - Slack channel to send insights to
 */
async function sendWellnessInsights(channelId) {
  try {
    // Mock wellness data (in real scenario, aggregate from pulse responses)
    const wellnessData = {
      physical: { score: 75, trend: 'slight increase' },
      mental: { score: 62, trend: 'decrease' },
      social: { score: 85, trend: 'stable' },
      growth: { score: 70, trend: 'increase' }
    };

    // Generate insights
    const insights = await generateWellnessInsights(wellnessData);
    
    // Create Slack blocks with robust error handling
    const insightsBlocks = createWellnessInsightsBlocks(insights);
    
    // Send to Slack
    await slackService.sendMessageWithBlocks(
      channelId, 
      "WellSense360 Team Wellness Insights", 
      insightsBlocks
    );
  } catch (error) {
    console.error('Error sending wellness insights:', error);
    await slackService.sendMessage(
      channelId,
      "Sorry, I couldn't generate insights at this time."
    );
  }
}

module.exports = {
  generateWellnessInsights,
  sendWellnessInsights
};